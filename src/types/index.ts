import {Option} from 'react-multi-select-component'

export enum Position {
    'P' = 1,
    'C' = 2,
    '1B' = 3,
    '2B' = 4,
    '3B' = 5,
    'SS' = 6,
    'LF' = 7,
    'CF' = 8,
    'RF' = 9,
    'DH' = 10,
}

export enum Tier {
    'Iron',
    'Bronze',
    'Silver',
    'Gold',
    'Diamond',
    'Perfect'
}

export enum Team {
    'Baltimore Orioles',
    'Boston Red Sox',
    'New York Yankees',
    'Tampa Bay Rays',
    'Toronto Blue Jays',
    'Chicago White Sox',
    'Cleveland Guardians',
    'Detroit Tigers',
    'Kansas City Royals',
    'Minnesota Twins',
    'Los Angeles Angels',
    'Athletics',
    'Seattle Mariners',
    'Texas Rangers',
    'Houston Astros',
    'Atlanta Braves',
    'Miami Marlins',
    'New York Mets',
    'Philadelphia Phillies',
    'Washington Nationals',
    'Chicago Cubs',
    'Cincinnati Reds',
    'Milwaukee Brewers',
    'Pittsburgh Pirates',
    'St. Louis Cardinals',
    'Arizona Diamondbacks',
    'Colorado Rockies',
    'Los Angeles Dodgers',
    'San Diego Padres',
    'San Francisco Giants',
}

export enum Division {
    'NL East',
    'NL Central',
    'NL West',
    'AL East',
    'AL Central',
    'AL West',
}

export enum League {
    'National League',
    'American League',
}

export enum PredictSearchType {
    "Tier",
    "Team",
    "Division",
    "League",
    "Rookies",
    "LastYearsAllstars",
    "LastYearsAwardWinners",
}

export interface AppData {
    cardPredictions: CardPrediction[],
    setCardPredictions: React.Dispatch<React.SetStateAction<CardPrediction[]>>, 
    selectedTeam: Option[],
    setSelectedTeam: React.Dispatch<React.SetStateAction<Option[]>>,
    cardPage: CardPagination,
    setCardPage: React.Dispatch<React.SetStateAction<CardPagination>>,
    currentLiveUpdateID: number,
}

export interface LiveUpdate {
    LiveUpdateID: number,
    EffectiveDate: string,
}

export interface GetPtCardPredictsRequest {
    TierFilter: number[],
    TeamFilter: string[],
    DivisionFilter: number[],
    LeagueFilter: number[],
    OnlyRookiesFilter: boolean,
    OnlyLastYearsAllstars: boolean,
    OnlyLastYearsAwardWinners: boolean,
    CardPagination: CardPagination,
    LatestLiveUpdateID: number,
}

export interface GetPtCardPredictsResponse {
    CardPredictions: CardPrediction[],
}

export interface CardPagination {
    CurrentPage: number,
    PageSize: number,
}

export interface PtCardPrediction {
    PtPredictID?: string,
    PtCardID: number,
    CardID: number,
    LiveUpdateID: number,
    CardTitle: string,
    CardValue: number,
    Position: Position,
    PredictedTier?: number,
}

export interface PostPtPredictRequest {
    PtPredictID?: string,
    CardID: number,
    PtCardID: number,
    PredictedTier: Tier,
    LiveUpdateID: number,
}

export interface PostPtPredictResponse {
    PtPredictID: string,
    PtCardID: number,
    CardID: number,
    PredictedTier: Tier,
    LiveUpdateID: number,
}

export interface CardPrediction {
    CardID: number,
    PtCardPredictions: PtCardPrediction[],
    ActivePtCardPrediction: PtCardPrediction,
}

export interface PtCard {
    CardID:number,
    CardTitle:string,
    CardValue:number,
    CardType:number,
    CardSubType:number,
    CardBadge:string,
    CardSeries:string,
    Year:number,
    Peak:string,
    Team:string,
    Franchise:string,
    FirstName:string,
    LastName:string,
    NickName:string,
    UniformNumber:number,
    DayOB:number,
    MonthOB:number,
    YearOB:number,
    Bats:number,
    Throws:number,
    Position:number,
    PitcherRole:number,
    Contact:number,
    Gap:number,
    Power:number,
    Eye:number,
    AvoidKs:number,
    BABIP:number,
    ContactvL:number,
    GapvL:number,
    PowervL:number,
    EyevL:number,
    AvoidKvL:number,
    BABIPvL:number,
    ContactvR:number,
    GapvR:number,
    PowervR:number,
    EyevR:number,
    AvoidKvR:number,
    BABIPvR:number,
    GBHitterType:number,
    FBHitterType:number,
    BattedBallType:number,
    Speed:number,
    StealRate:number,
    Stealing:number,
    Baserunning:number,
    Sacbunt:number,
    Buntforhit:number,
    Stuff:number,
    Movement:number,
    Control:number,
    pHR:number,
    pBABIP:number,
    StuffvL:number,
    MovementvL:number,
    ControlvL:number,
    pHRvL:number,
    pBABIPvL:number,
    StuffvR:number,
    MovementvR:number,
    ControlvR:number,
    pHRvR:number,
    pBABIPvR:number,
    Fastball:number,
    Slider:number,
    Curveball:number,
    Changeup:number,
    Cutter:number,
    Sinker:number,
    Splitter:number,
    Forkball:number,
    Screwball:number,
    Circlechange:number,
    Knucklecurve:number,
    Knuckleball:number,
    Stamina:number,
    Hold:number,
    GB:number,
    Velocity:number,
    ArmSlot:number,
    Height:number,
    InfieldRange:number,
    InfieldError:number,
    InfieldArm:number,
    DP:number,
    CatcherAbil:number,
    CatcherFrame:number,
    CatcherArm:number,
    OFRange:number,
    OFError:number,
    OFArm:number,
    PosRatingP:number,
    PosRatingC:number,
    PosRating1B:number,
    PosRating2B:number,
    PosRating3B:number,
    PosRatingSS:number,
    PosRatingLF:number,
    PosRatingCF:number,
    PosRatingRF:number,
    LearnC:number,
    Learn1B:number,
    Learn2B:number,
    Learn3B:number,
    LearnSS:number,
    LearnLF:number,
    LearnCF:number,
    LearnRF:number,
    era:number,
    MissionValue:number,
    limit:number,
    owned:number,
    brefid:string,
    date:number,
    LiveUpdateID:number,
    PtCardID:number,
}

export interface PtPredict {
    PtPredictID: string,
    PtCardID: number,
    CardID: number,
    LiveUpdateID: number,
    PredictedTier: number,
    UserID: string,
}